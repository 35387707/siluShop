
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>商家管理系统</title>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <script src="~/js/jquery-2.0.0.min.js"></script>
    <style>
        body {
            text-align: center;
            background: #F7FAFC;
            overflow: hidden;
            background: #fff;
        }

        #bac {
            position: fixed;
            top: 0;
            left: 0;
            z-index: -1;
        }

        #loginBody {
            background-color: rgba(255,255,255,.8);
            border: 1px solid rgb(176,176,176);
            margin-top: 10%;
            border-radius: 5px;
        }

            #loginBody .form-inline {
                margin: 30px 20px;
            }

        .copyright {
            text-align: center;
            width: 250px;
            margin: 0 auto;
            padding: 10px 10px 0 10px;
            color: #999;
            font-size: 11px;
            margin: 30px auto;
            padding-top: 30px;
        }
    </style>
    <script>
        function login() {
            var name = $("#name").val();
            var pwd = $("#pwd").val();
            if (name == "" || pwd == "") {
                alert("用户名或密码为空");
                return
            }
            $.post("/Shop/DoLogin", "name=" + name + "&pwd=" + pwd, function (data) {
                if (data.code == "1") {
                    location.href = "/Shop/Manager";
                }
                else {
                    alert(data.msg);
                }
            }, "json");
        }
    </script>
</head>
<body>
    <div id="bac" class="col-md-12">
        <canvas id="Mycanvas"></canvas>
    </div>
    <div class="col-md-12">
        <div class="col-md-4 col-md-offset-4" id="loginBody">
            <h3 class="form-title">商家管理系统</h3>

            <div class="form-inline">
                账号：<input type="text" class="form-control" id="name" />
            </div>

            <div class="form-inline">
                密码：<input type="password" class="form-control" id="pwd" />
            </div>
            <div class="form-inline">
                <input type="button" class="btn btn-primary col-md-5 col-md-offset-4" value="登陆" onclick="login()" />
            </div>
            <div class="copyright" style="clear:both">
                2013 &copy; 广州翰德网络信息科技有限公司.
            </div>
        </div>
    </div>
    <script>
		//定义画布宽高和生成点的个数
		var WIDTH = window.innerWidth, HEIGHT = window.innerHeight, POINT = 35;

		var canvas = document.getElementById('Mycanvas');
		canvas.width = WIDTH,
		canvas.height = HEIGHT;
		var context = canvas.getContext('2d');
		context.strokeStyle = 'rgba(0,0,0,0.2)',
		context.strokeWidth = 1,
		context.fillStyle = 'rgba(0,0,0,0.1)';
		var circleArr = [];

		//线条：开始xy坐标，结束xy坐标，线条透明度
		function Line (x, y, _x, _y, o) {
			this.beginX = x,
			this.beginY = y,
			this.closeX = _x,
			this.closeY = _y,
			this.o = o;
		}
		//点：圆心xy坐标，半径，每帧移动xy的距离
		function Circle (x, y, r, moveX, moveY) {
			this.x = x,
			this.y = y,
			this.r = r,
			this.moveX = moveX,
			this.moveY = moveY;
		}
		//生成max和min之间的随机数
		function num (max, _min) {
			var min = arguments[1] || 0;
			return Math.floor(Math.random()*(max-min+1)+min);
		}
		// 绘制原点
		function drawCricle (cxt, x, y, r, moveX, moveY) {
			var circle = new Circle(x, y, r, moveX, moveY)
			cxt.beginPath()
			cxt.arc(circle.x, circle.y, circle.r, 0, 2*Math.PI)
			cxt.closePath()
			cxt.fill();
			return circle;
		}
		//绘制线条
		function drawLine (cxt, x, y, _x, _y, o) {
			var line = new Line(x, y, _x, _y, o)
			cxt.beginPath()
			cxt.strokeStyle = 'rgba(0,0,0,'+ o +')'
			cxt.moveTo(line.beginX, line.beginY)
			cxt.lineTo(line.closeX, line.closeY)
			cxt.closePath()
			cxt.stroke();

		}
		//初始化生成原点
		function init () {
			circleArr = [];
			for (var i = 0; i < POINT; i++) {
				circleArr.push(drawCricle(context, num(WIDTH), num(HEIGHT), num(15, 2), num(10, -10)/40, num(10, -10)/40));
			}
			draw();
		}

		//每帧绘制
		function draw () {
			context.clearRect(0,0,canvas.width, canvas.height);
			for (var i = 0; i < POINT; i++) {
				drawCricle(context, circleArr[i].x, circleArr[i].y, circleArr[i].r);
			}
			for (var i = 0; i < POINT; i++) {
				for (var j = 0; j < POINT; j++) {
					if (i + j < POINT) {
						var A = Math.abs(circleArr[i+j].x - circleArr[i].x),
							B = Math.abs(circleArr[i+j].y - circleArr[i].y);
						var lineLength = Math.sqrt(A*A + B*B);
						var C = 1/lineLength*7-0.009;
						var lineOpacity = C > 0.03 ? 0.03 : C;
						if (lineOpacity > 0) {
							drawLine(context, circleArr[i].x, circleArr[i].y, circleArr[i+j].x, circleArr[i+j].y, lineOpacity);
						}
					}
				}
			}
		}

		//调用执行
		window.onload = function () {
			init();
			setInterval(function () {
				for (var i = 0; i < POINT; i++) {
					var cir = circleArr[i];
					cir.x += cir.moveX;
					cir.y += cir.moveY;
					if (cir.x > WIDTH) cir.x = 0;
					else if (cir.x < 0) cir.x = WIDTH;
					if (cir.y > HEIGHT) cir.y = 0;
					else if (cir.y < 0) cir.y = HEIGHT;

				}
				draw();
			}, 16);
		}

    </script>
</body>
</html>
